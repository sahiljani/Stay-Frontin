{% comment %}
  Video Carousel Section - Exact replica
{% endcomment %}

<style>
  .video-carousel-section {
    position: relative;
    width: 100%;
    min-height: 600px;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 60px 20px;
    background: {{ section.settings.background_color }};
  }

  .video-carousel-track {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: -100px;
    position: relative;
    width: 100%;
    max-width: 1400px;
    perspective: 1200px;
  }

  .video-card {
    position: relative;
    width: 320px;
    height: 550px;
    border-radius: 12px;
    overflow: hidden;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);
    flex-shrink: 0;
  }

  /* Side cards styling */
  .video-card.side {
    transform: scale(0.85) translateZ(-100px);
    opacity: 0.6;
    filter: brightness(0.7);
    z-index: 1;
  }

  .video-card.side-left {
    transform: scale(0.85) translateX(50px) translateZ(-100px) rotateY(5deg);
  }

  .video-card.side-right {
    transform: scale(0.85) translateX(-50px) translateZ(-100px) rotateY(-5deg);
  }

  /* Center/Active card styling */
  .video-card.center {
    transform: scale(1) translateZ(0);
    opacity: 1;
    filter: brightness(1);
    z-index: 10;
  }

  /* Hidden cards */
  .video-card.hidden {
    opacity: 0;
    transform: scale(0.7) translateZ(-200px);
    pointer-events: none;
  }

  .video-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    background: #000;
  }

  .video-card video,
  .video-card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* Top controls */
  .video-top-controls {
    position: absolute;
    top: 12px;
    right: 12px;
    display: flex;
    gap: 8px;
    z-index: 20;
  }

  .video-menu-btn {
    background: rgba(0, 0, 0, 0.5);
    border: none;
    color: white;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(10px);
    transition: background 0.2s;
  }

  .video-menu-btn:hover {
    background: rgba(0, 0, 0, 0.7);
  }

  /* Three dots menu */
  .video-menu-btn.dots::before {
    content: 'â‹®';
    font-size: 20px;
  }

  /* Video title overlay */
  .video-title-overlay {
    position: absolute;
    top: 12px;
    left: 12px;
    background: rgba(0, 0, 0, 0.5);
    color: white;
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 13px;
    font-weight: 500;
    backdrop-filter: blur(10px);
    z-index: 20;
  }



  /* Navigation arrows */
  .carousel-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: white;
    border: none;
    width: 56px;
    height: 56px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 100;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transition: all 0.2s;
  }

  .carousel-arrow:hover {
    transform: translateY(-50%) scale(1.05);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
  }

  .carousel-arrow.prev {
    left: 20px;
  }

  .carousel-arrow.next {
    right: 20px;
  }

  .carousel-arrow svg {
    width: 24px;
    height: 24px;
    stroke: #333;
    stroke-width: 2.5;
  }

  /* Modal */
  .video-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.95);
    z-index: 9999;
    align-items: center;
    justify-content: center;
  }

  .video-modal.active {
    display: flex;
  }

  .video-modal-content {
    position: relative;
    width: 90%;
    max-width: 500px;
    aspect-ratio: 9/16;
  }

  .video-modal video {
    width: 100%;
    height: 100%;
    object-fit: contain;
    border-radius: 12px;
  }

  .modal-close {
    position: absolute;
    top: -50px;
    right: 0;
    background: none;
    border: none;
    color: white;
    font-size: 36px;
    cursor: pointer;
    width: 40px;
    height: 40px;
    line-height: 1;
  }

  @media (max-width: 768px) {
    .video-card {
      width: 280px;
      height: 480px;
    }
    
    .carousel-arrow {
      width: 44px;
      height: 44px;
    }
  }
</style>

<div class="video-carousel-section">
  <button class="carousel-arrow prev" onclick="changeSlideFunc{{ section.id }}(-1)" aria-label="Previous video">
    <svg viewBox="0 0 24 24" fill="none">
      <polyline points="15 18 9 12 15 6"></polyline>
    </svg>
  </button>

  <div class="video-carousel-track" id="track-{{ section.id }}">
    {% for block in section.blocks %}
      <div class="video-card {% if forloop.index == 1 %}side-left{% elsif forloop.index == 2 %}center{% elsif forloop.index == 3 %}side-right{% else %}hidden{% endif %}" 
           data-index="{{ forloop.index0 }}" 
           id="card-{{ section.id }}-{{ forloop.index0 }}">
        <div class="video-card-inner">
          {% if block.settings.video_file != blank %}
            <video 
              loop 
              muted 
              playsinline
              {% if forloop.index == 2 %}autoplay{% endif %}
              id="video-{{ section.id }}-{{ forloop.index0 }}">
              <source src="{{ block.settings.video_file }}" type="video/mp4">
            </video>
          {% elsif block.settings.video_url != blank %}
            {% if forloop.index == 2 %}
              <iframe src="{{ block.settings.video_url }}" frameborder="0" allow="autoplay; fullscreen" style="width:100%;height:100%;"></iframe>
            {% else %}
              <iframe src="{{ block.settings.video_url }}" frameborder="0" allow="fullscreen" style="width:100%;height:100%;"></iframe>
            {% endif %}
          {% elsif block.settings.poster_image != blank %}
            <img src="{{ block.settings.poster_image | image_url: width: 640 }}" alt="{{ block.settings.title }}">
          {% endif %}

          {% if block.settings.title != blank %}
            <div class="video-title-overlay">{{ block.settings.title }}</div>
          {% endif %}

          <div class="video-top-controls">
            <button class="video-menu-btn dots" aria-label="Menu"></button>
            <button class="video-menu-btn" onclick="toggleMuteVideo{{ section.id }}({{ forloop.index0 }})" aria-label="Toggle mute">
              <svg width="18" height="18" viewBox="0 0 24 24" fill="white">
                <path d="M16.5 12c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM5 9v6h4l5 5V4L9 9H5z"/>
              </svg>
            </button>
            <button class="video-menu-btn" onclick="toggleFullscreenVideo{{ section.id }}({{ forloop.index0 }})" aria-label="Fullscreen">
              <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2">
                <path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
    {% endfor %}
  </div>

  <button class="carousel-arrow next" onclick="changeSlideFunc{{ section.id }}(1)" aria-label="Next video">
    <svg viewBox="0 0 24 24" fill="none">
      <polyline points="9 18 15 12 9 6"></polyline>
    </svg>
  </button>
</div>

<div class="video-modal" id="modal-{{ section.id }}">
  <div class="video-modal-content">
    <button class="modal-close" onclick="closeModalFunc{{ section.id }}()">&times;</button>
    <video id="modal-video-{{ section.id }}" controls playsinline></video>
  </div>
</div>

<script>
(function() {
  const sectionId = '{{ section.id }}';
  let currentIndex = 1;
  const totalCards = {{ section.blocks.size }};

  window['changeSlideFunc' + sectionId] = function(direction) {
    currentIndex += direction;
    if (currentIndex < 0) currentIndex = totalCards - 1;
    if (currentIndex >= totalCards) currentIndex = 0;
    updateCarousel();
  };

  function updateCarousel() {
    const cards = document.querySelectorAll('#track-' + sectionId + ' .video-card');
    
    cards.forEach((card, index) => {
      card.className = 'video-card';
      
      const video = card.querySelector('video');
      if (video) video.pause();
      
      if (index === currentIndex) {
        card.classList.add('center');
        if (video) video.play();
      } else if (index === (currentIndex - 1 + totalCards) % totalCards) {
        card.classList.add('side-left');
      } else if (index === (currentIndex + 1) % totalCards) {
        card.classList.add('side-right');
      } else {
        card.classList.add('hidden');
      }
    });
  }

  window['toggleMuteVideo' + sectionId] = function(index) {
    const video = document.getElementById('video-' + sectionId + '-' + index);
    if (video) {
      video.muted = !video.muted;
    }
  };

  window['toggleFullscreenVideo' + sectionId] = function(index) {
    const video = document.getElementById('video-' + sectionId + '-' + index);
    if (video) {
      if (video.requestFullscreen) {
        video.requestFullscreen();
      } else if (video.webkitRequestFullscreen) {
        video.webkitRequestFullscreen();
      } else if (video.mozRequestFullScreen) {
        video.mozRequestFullScreen();
      } else if (video.msRequestFullscreen) {
        video.msRequestFullscreen();
      }
    }
  };

  window['closeModalFunc' + sectionId] = function() {
    const modal = document.getElementById('modal-' + sectionId);
    const modalVideo = document.getElementById('modal-video-' + sectionId);
    
    modal.classList.remove('active');
    modalVideo.pause();
    modalVideo.src = '';
  };

  const modal = document.getElementById('modal-' + sectionId);
  if (modal) {
    modal.addEventListener('click', function(e) {
      if (e.target === this) {
        window['closeModalFunc' + sectionId]();
      }
    });
  }

  updateCarousel();
})();
</script>

{% schema %}
{
  "name": "Video Carousel",
  "settings": [
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#f5f5f5"
    }
  ],
  "blocks": [
    {
      "type": "video",
      "name": "Video",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Video Title",
          "default": "Video Title"
        },
        {
          "type": "video_url",
          "id": "video_url",
          "label": "Video URL",
          "accept": ["youtube", "vimeo"],
          "info": "YouTube or Vimeo video URL"
        },
        {
          "type": "text",
          "id": "video_file",
          "label": "Direct Video URL",
          "info": "Direct .mp4 video file URL (from Shopify Files or external CDN)"
        },
        {
          "type": "image_picker",
          "id": "poster_image",
          "label": "Poster Image",
          "info": "Fallback image if video not available"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Video Carousel",
      "blocks": [
        {
          "type": "video",
          "settings": {
            "title": "Crimson Red Print"
          }
        },
        {
          "type": "video",
          "settings": {
            "title": "Green Elegance"
          }
        },
        {
          "type": "video",
          "settings": {
            "title": "Blue Floral"
          }
        },
        {
          "type": "video",
          "settings": {
            "title": "Pink Pattern"
          }
        },
        {
          "type": "video",
          "settings": {
            "title": "Navy Design"
          }
        }
      ]
    }
  ]
}
{% endschema %}