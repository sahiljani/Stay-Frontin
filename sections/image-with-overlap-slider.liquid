{% comment %}
    Image (40%) + Overlapping Product Panel (60%) – 3-up carousel
{% endcomment %}
{%- assign coll = section.settings.collection -%}
{%- assign max_items = section.settings.max_items | default: 12 -%}

<style>
  #shopify-section-{{ section.id }} .io-wrap{
    --overlap: {{ section.settings.overlap | default: 5 }}%;
    --radius: {{ section.settings.radius | default: 18 }}px;
    --panel-bg: {{ section.settings.panel_bg | default: '#ffffff' }};
    --section-bg: {{ section.settings.section_bg | default: '#f6f2ef' }};
    --card-radius: 14px;
    --border: 1px solid rgba(0,0,0,.06);
    background: var(--section-bg);
    width: 100%;
    max-width: 100%;
    overflow: hidden;
    padding: 3rem 1.5rem;
  }

  @media (min-width: 768px) {
    #shopify-section-{{ section.id }} .io-wrap{
      padding: 4rem 2rem;
    }
  }

  @media (min-width: 1024px) {
    #shopify-section-{{ section.id }} .io-wrap{
      padding: 5rem 3rem;
    }
  }

  /* Simple grid layout */
  #shopify-section-{{ section.id }} .io-grid{
    display: grid;
    grid-template-columns: 1fr;
    align-items: center;
    gap: 2.5rem;
    max-width: 1400px;
    margin: 0 auto;
  }

  @media (min-width: 768px) {
    #shopify-section-{{ section.id }} .io-grid{
      grid-template-columns: 40% 60%;
      gap: 3rem;
    }
  }

  #shopify-section-{{ section.id }} .io-image{
    border-radius: var(--radius);
    overflow: hidden;
    width: 100%;
    max-width: 100%;
  }

  /* Desktop: hard height */
  @media (min-width: 991px){
    #shopify-section-{{ section.id }} .io-image{
      height: 550px;
    }
  }

  /* Mobile: let it auto or use a ratio so it doesn't look squashed */
  @media (max-width: 990px){
    #shopify-section-{{ section.id }} .io-image{
      aspect-ratio: 4 / 5;
      height: auto;
    }
  }

  #shopify-section-{{ section.id }} .io-image img{
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  #shopify-section-{{ section.id }} .io-image img{
    width:100%; height:100%; object-fit:cover; display:block;
  }

  /* Panel styling */
  #shopify-section-{{ section.id }} .io-panel{
    background: var(--panel-bg);
    border-radius: var(--radius);
    padding: 2rem 1.5rem;
    position: relative;
    z-index: 2;
  }

  @media (max-width: 767px){
    #shopify-section-{{ section.id }} .io-panel{
      margin-top: -3rem;
      box-shadow: 0 10px 30px rgba(0,0,0,.1);
    }
  }

  @media (min-width: 768px){
    #shopify-section-{{ section.id }} .io-panel{
      margin-left: calc(-1 * var(--overlap));
      padding: 2.5rem 2rem;
    }
  }

  @media (min-width: 1024px){
    #shopify-section-{{ section.id }} .io-panel{
      padding: 3rem 2.5rem;
    }
  }

  /* Header */
  #shopify-section-{{ section.id }} .io-head{
    position: relative;
    padding: 1.5rem 3.5rem 2rem 1.5rem;
    text-align: center;
  }

  #shopify-section-{{ section.id }} .io-title{
    margin: 0;
    line-height: 1.2;
    font-weight: 700;
  }
  
  #shopify-section-{{ section.id }} .io-nav{
    position: absolute; 
    top: 1rem; 
    right: 1rem; 
    display: none;
    gap: 0.5rem;
  }
  
  @media (min-width: 768px) {
    #shopify-section-{{ section.id }} .io-nav{
      display: flex;
    }
  }
  
  #shopify-section-{{ section.id }} .io-btn{
    width: 36px; 
    height: 36px; 
    border-radius: 50%; 
    border: 1px solid rgba(0,0,0,.15);
    display: flex;
    align-items: center;
    justify-content: center;
    background: #fff; 
    cursor: pointer;
  }

  /* Responsive carousel */
  #shopify-section-{{ section.id }} .io-window{ 
    overflow: hidden; 
    border-radius: var(--radius);
  }
  
  #shopify-section-{{ section.id }} .io-track{
    display: flex;
    cursor: grab;
    user-select: none;
    touch-action: pan-y;
    transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  
  #shopify-section-{{ section.id }} .io-track.dragging {
    cursor: grabbing;
  }
  
  /* Card sizing */
  #shopify-section-{{ section.id }} .io-card{
    flex: 0 0 80%;
    padding: 0 0.75rem;
  }

  @media (min-width: 576px) {
    #shopify-section-{{ section.id }} .io-card{
      flex: 0 0 50%;
    }
  }

  @media (min-width: 1024px) {
    #shopify-section-{{ section.id }} .io-card{
      flex: 0 0 33.333%;
    }
  }

  #shopify-section-{{ section.id }} .io-card-inner{
    border: var(--border);
    border-radius: var(--card-radius);
    overflow:hidden;
    background:#fff;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  #shopify-section-{{ section.id }} .io-card-inner:hover{
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(0,0,0,.12);
  }
  #shopify-section-{{ section.id }} .io-media{
    position:relative; background:#f4f4f4;
  }
  #shopify-section-{{ section.id }} .io-media img{ width:100%; aspect-ratio: 1/1; object-fit:contain; display:block; }

  /* SALE pill + % OFF chip */
  #shopify-section-{{ section.id }} .pill{
    position:absolute; top:12px; left:12px;
    background:#ff3ea5; color:#fff; font-weight:700;
    padding:.35rem .6rem; border-radius:999px;
  }
  #shopify-section-{{ section.id }} .chip{
    position:absolute; bottom:12px; left:12px;
    background:#ff6ea1; color:#fff; font-weight:700;
    padding:.35rem .6rem; border-radius:999px;
  }

  /* Card content */
  #shopify-section-{{ section.id }} .io-body{
    padding: 1.25rem;
  }

  #shopify-section-{{ section.id }} .vendor{
    text-transform: uppercase;
    letter-spacing: 0.05em;
    opacity: 0.6;
    margin-bottom: 0.5rem;
  }

  #shopify-section-{{ section.id }} .title{
    line-height: 1.4;
    margin: 0.5rem 0 0.75rem;
    min-height: 2.5em;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    font-weight: 500;
  }
  
  #shopify-section-{{ section.id }} .price{
    display: flex; 
    gap: 0.5rem; 
    align-items: baseline;
  }
  
  #shopify-section-{{ section.id }} .price .now{ 
    font-weight: 700;
  }
  
  #shopify-section-{{ section.id }} .price s{
    opacity: 0.5;
  }
  
  #shopify-section-{{ section.id }} .io-track * {
    -webkit-user-drag: none;
    -webkit-touch-callout: none;
    user-select: none;
  }
</style>

<section class="io-wrap" id="shopify-section-{{ section.id }}">
  <div class="io-grid">
    <div class="io-image">
      {%- if section.settings.left_image != blank -%}
        {{ section.settings.left_image | image_url: width: 1600 | image_tag: loading: 'lazy', alt: section.settings.left_image.alt }}
      {%- else -%}
        {{ 'image' | placeholder_svg_tag }}
      {%- endif -%}
    </div>

    <div class="io-panel">
      <div class="io-head">
        <h2 class="io-title">{{ section.settings.heading }}</h2>
        <div class="io-nav" aria-hidden="true">
          <button class="io-btn" data-dir="-1" aria-label="Previous">‹</button>
          <button class="io-btn" data-dir="1" aria-label="Next">›</button>
        </div>
      </div>

      <div class="io-window">
        <div class="io-track" id="track-{{ section.id }}">
          {%- if coll and coll.products_count > 0 -%}
            {%- for product in coll.products limit: max_items -%}
                {%- comment -%} Compute discount flags safely in Liquid {%- endcomment -%}
                {%- assign has_discount = false -%}
                {%- assign pct = 0 -%}
                {%- if product.compare_at_price_max and product.compare_at_price_max > product.price -%}
                    {%- assign diff = product.compare_at_price_max | minus: product.price -%}
                    {%- assign pct  = diff | times: 100 | divided_by: product.compare_at_price_max -%}
                    {%- assign has_discount = true -%}
                {%- endif -%}

                <a class="io-card" href="{{ product.url }}">
                    <div class="io-card-inner">
                    <div class="io-media">
                        {% if product.featured_media %}
                        {{ product.featured_media | image_url: width: 650 | image_tag: loading: 'lazy', alt: product.title }}
                        {% else %}
                        <div style="aspect-ratio:1/1;background:#f2f2f2;"></div>
                        {% endif %}
                        {%- if has_discount -%}
                        <span class="pill">SALE</span>
                        <span class="chip">{{ pct | round }}% OFF</span>
                        {%- endif -%}
                    </div>
                    <div class="io-body">
                        <div class="vendor">{{ product.vendor }}</div>
                        <div class="title">{{ product.title }}</div>
                        <div class="price">
                        <span class="now">{{ product.price | money }}</span>
                        {%- if has_discount -%}<s>{{ product.compare_at_price_max | money }}</s>{%- endif -%}
                        </div>
                    </div>
                    </div>
                </a>
                {%- endfor -%}

          {%- else -%}
            {%- for i in (1..6) -%}
              <div class="io-card">
                <div class="io-card-inner">
                  <div class="io-media"><div style="aspect-ratio:1/1;background:#f2f2f2;"></div></div>
                  <div class="io-body">
                    <div class="vendor">ANUA</div>
                    <div class="title">Product title</div>
                    <div class="price"><span class="now">$24.00</span></div>
                  </div>
                </div>
              </div>
            {%- endfor -%}
          {%- endif -%}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  (function(){
    const section = document.getElementById('shopify-section-{{ section.id }}');
    if (!section) return;
    
    const track = section.querySelector('#track-{{ section.id }}');
    if (!track) return;

    const btns = section.querySelectorAll('[data-dir]');
    const cards = track.querySelectorAll('.io-card');
    
    let visible = getVisibleCards();
    const totalSlides = cards.length;
    if (totalSlides <= visible) {
      if (btns.length > 0) {
        btns.forEach(btn => btn.style.display = 'none');
      }
      return; // Not enough slides to scroll, so exit.
    }

    let isDragging = false;
    let startX;
    let initialX = 0;
    let xOffset = 0;
    let dragDistance = 0;
    let clickedLink = null;

    // --- Core Dragging Functions ---

    function getXPosition(e) {
      return e.type.includes('mouse') ? e.pageX : e.touches[0].clientX;
    }

    function dragStart(e) {
      // Don't drag if it's not the primary mouse button
      if (e.type.includes('mouse') && e.which !== 1) return;

      isDragging = true;
      startX = getXPosition(e);
      initialX = xOffset;
      dragDistance = 0;
      clickedLink = e.target.closest('a'); // Keep track of the link being interacted with

      track.style.transition = 'none'; // Remove transition for instant feedback
      track.classList.add('dragging');
      
      document.addEventListener('mousemove', dragging, { passive: false });
      document.addEventListener('touchmove', dragging, { passive: false });
      document.addEventListener('mouseup', dragEnd, { once: true });
      document.addEventListener('touchend', dragEnd, { once: true });
    }

    function dragging(e) {
      if (!isDragging) return;
      e.preventDefault(); // Prevent page scroll on touch devices

      const currentX = getXPosition(e);
      dragDistance = currentX - startX;
      xOffset = initialX + dragDistance;

      // Add resistance at the edges for a "gummy" feel
      const maxScroll = 0;
      const minScroll = -(totalSlides - visible) * (track.offsetWidth / visible);
      
      if (xOffset > maxScroll) {
        xOffset = maxScroll + (xOffset - maxScroll) / 3;
      } else if (xOffset < minScroll) {
        xOffset = minScroll + (xOffset - minScroll) / 3;
      }
      
      setTranslate(xOffset);
    }

    function dragEnd(e) {
      if (!isDragging) return;
      isDragging = false;
      track.classList.remove('dragging');
      
      // --- Differentiate Click vs. Drag ---
      // If the drag distance is small, it was a click, not a drag.
      // Otherwise, prevent the link from navigating.
      if (Math.abs(dragDistance) > 10 && clickedLink) {
        clickedLink.addEventListener('click', preventGhostClick, { once: true, capture: true });
      }

      // --- Snapping Logic ---
      const cardWidth = track.offsetWidth / visible;
      let targetIndex = Math.round(xOffset / cardWidth); // Find nearest slide index

      // Add a small "flick" based on drag distance
      const flickThreshold = cardWidth / 4;
      if (dragDistance < -flickThreshold) {
        targetIndex = Math.floor(xOffset / cardWidth);
      } else if (dragDistance > flickThreshold) {
        targetIndex = Math.ceil(xOffset / cardWidth);
      }

      // Clamp the index within valid bounds
      targetIndex = Math.max(-(totalSlides - visible), Math.min(0, targetIndex));
      
      xOffset = targetIndex * cardWidth;
      
      track.style.transition = 'transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
      setTranslate(xOffset);

      // Cleanup
      document.removeEventListener('mousemove', dragging);
      document.removeEventListener('touchmove', dragging);
      clickedLink = null;
    }

    function setTranslate(xPos) {
      track.style.transform = `translateX(${xPos}px)`;
    }

    function preventGhostClick(e) {
      e.preventDefault();
      e.stopPropagation();
    }

    // --- Navigation & Initialization ---

    function handleNavClick(e) {
      const dir = parseInt(e.currentTarget.dataset.dir, 10);
      const cardWidth = track.offsetWidth / visible;
      let targetIndex = Math.round(xOffset / cardWidth) + dir;

      // Clamp index
      targetIndex = Math.max(-(totalSlides - visible), Math.min(0, targetIndex));

      xOffset = targetIndex * cardWidth;
      track.style.transition = 'transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
      setTranslate(xOffset);
    }

    function getVisibleCards() {
      const width = window.innerWidth;
      if (width < 576) return 1.25; // Show 1 card + 25% of next
      if (width < 1024) return 2;
      return 3;
    }

    function init() {
      // Reset position and recalculate `visible` count
      visible = getVisibleCards();
      xOffset = 0;
      track.style.transition = 'none';
      setTranslate(0);
      
      // Hide navigation if not enough slides
      if (totalSlides <= visible) {
        if (btns.length > 0) {
          btns.forEach(btn => btn.style.display = 'none');
        }
      } else {
        if (btns.length > 0) {
          btns.forEach(btn => btn.style.display = 'grid');
        }
      }
      
      // Add initial event listeners
      track.addEventListener('mousedown', dragStart);
      track.addEventListener('touchstart', dragStart, { passive: true });
      btns.forEach(btn => btn.addEventListener('click', handleNavClick));
    }
    
    // Recalculate on resize
    window.addEventListener('resize', init);

    // Initial setup
    init();

  })();
</script>

{% schema %}
{
  "name": "Image + Overlap (40/60)",
  "tag": "section",
  "class": "section image-overlap-4060",
  "settings": [
    { "type": "image_picker", "id": "left_image", "label": "Left image" },
    { "type": "text", "id": "heading", "label": "Heading", "default": "NEW SKIN & HAIR CARE PRODUCTS" },
    { "type": "collection", "id": "collection", "label": "Product collection" },
    { "type": "range", "id": "max_items", "label": "Max products", "min": 3, "max": 20, "step": 1, "default": 12 },
    { "type": "range", "id": "overlap", "label": "Overlap onto image (%)", "min": 0, "max": 12, "step": 1, "default": 5 },
    { "type": "range", "id": "radius", "label": "Corner radius (px)", "min": 0, "max": 28, "step": 1, "default": 18 },
    { "type": "color", "id": "panel_bg", "label": "Panel background", "default": "#ffffff" },
    { "type": "color", "id": "section_bg", "label": "Section background", "default": "#f6f2ef" }
  ],
  "presets": [
    { "name": "Image + Overlap (40/60)" }
  ]
}
{% endschema %}
